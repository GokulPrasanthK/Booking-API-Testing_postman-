{
	"info": {
		"_postman_id": "ca1fc2c1-5aec-4f23-aa05-bc60dee7636e",
		"name": "Book API Testing",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "38308854"
	},
	"item": [
		{
			"name": "Create Auth token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Validating Response Status code is 200\", ()=>{\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Validating token field in response\", function(){ \r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.expect(jsonData).to.have.property('token');\r",
							"pm.expect(jsonData.token).to.be.a('string').and.to.have.lengthOf.at.least(1,'token should be a non-empty string');\r",
							"})\r",
							"\r",
							"pm.test(\"Setting Auth token value as environment variable\",()=>{\r",
							"const jsonData = pm.response.json();\r",
							"    const token = jsonData.token; \r",
							"    pm.environment.set(\"authToken\", token);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\" : \"admin\",\n    \"password\" : \"password123\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/auth",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"auth"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"validating Response status code is 200\", ()=>\r",
							"{\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Validating bookingid field in response\",()=>\r",
							"{\r",
							"   var jsonData = pm.response.json();\r",
							"   pm.expect(jsonData).to.have.property('bookingid');\r",
							"   pm.expect(jsonData.bookingid).to.be.a('number');\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"pm.globals.set(\"bookingID\",jsonData.bookingid)\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"firstname\" : \"Jim\",\n    \"lastname\" : \"Brown\",\n    \"totalprice\" : 111,\n    \"depositpaid\" : true,\n    \"bookingdates\" : {\n        \"checkin\" : \"2024-01-01\",\n        \"checkout\" : \"2024-05-01\"\n    },\n    \"additionalneeds\" : \"Breakfast\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/booking",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"booking"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Booking",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Validating Response Status code is 200\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/booking/{{bookingID}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"booking",
						"{{bookingID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Validating Response Status code is 200\", ()=>{\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Cookie",
						"value": "token={{authToken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"firstname\" : \"James\",\n    \"lastname\" : \"Brown\",\n    \"totalprice\" : 111,\n    \"depositpaid\" : true,\n    \"bookingdates\" : {\n        \"checkin\" : \"2018-01-01\",\n        \"checkout\" : \"2019-01-01\"\n    },\n    \"additionalneeds\" : \"Breakfast\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/booking/{{bookingID}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"booking",
						"{{bookingID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Validating Response Status code is 201\", ()=>{\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Cookie",
						"value": "token={{authToken}}"
					}
				],
				"url": {
					"raw": "{{baseURL}}/booking/{{bookingID}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"booking",
						"{{bookingID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Booking after deleting",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Validating Response Status code is 404\", () => {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Validating the Response\", () => {\r",
							"    var jsonData = pm.response.text();\r",
							"    pm.expect(jsonData).include('Not Found');\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/booking/{{bookingID}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"booking",
						"{{bookingID}}"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "token",
			"value": ""
		}
	]
}